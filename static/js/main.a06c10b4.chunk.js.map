{"version":3,"sources":["calorie-counter-app.tsx","index.js"],"names":["USER_STORAGE_KEY","FOODS_STORAGE_KEY","CalorieTrackerApp","user","setUser","useState","storedUser","localStorage","getItem","JSON","parse","name","age","gender","weight","height","activityLevel","goal","currentDate","setCurrentDate","Date","toISOString","split","allFoods","setAllFoods","storedFoods","foods","filter","food","date","newFood","setNewFood","calories","protein","carbs","fat","activeTab","setActiveTab","dailySummary","setDailySummary","nutritionGoals","setNutritionGoals","useEffect","setItem","stringify","calculateBMR","Math","round","calculateTDEE","bmr","sedentary","light","moderate","active","veryActive","calorieGoal","calculateCalorieGoal","tdee","lose","maintain","gain","proteinPerKg","proteinGoal","proteinCalories","fatCalories","fatGoal","remainingCalories","carbGoal","summary","reduce","total","changeDate","offset","setDate","getDate","formatDate","dateString","today","yesterday","toLocaleDateString","weekday","month","day","handleUpdateProfile","field","value","[object Object]","caloriePercentage","min","proteinPercentage","carbsPercentage","fatPercentage","React","createElement","className","onClick","style","width","generateAdvice","advice","push","length","map","index","key","id","handleRemoveFood","aria-label","X","size","type","onChange","e","target","placeholder","Number","handleAddFood","foodItem","now","toString","updatedFoods","Home","PlusCircle","Calculator","Settings","container","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.a06c10b4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Calculator, PlusCircle, Home, Settings, X } from 'lucide-react';\n\n// Define types for user and food\ntype User = {\n  name: string;\n  age: number;\n  gender: \"male\" | \"female\";\n  weight: number;\n  height: number;\n  activityLevel: \"sedentary\" | \"light\" | \"moderate\" | \"active\" | \"veryActive\";\n  goal: \"lose\" | \"maintain\" | \"gain\";\n};\n\ntype Food = {\n  id: string;\n  name: string;\n  calories: number;\n  protein: number;\n  carbs: number;\n  fat: number;\n  date: string;\n};\n\n// Local Storage Keys\nconst USER_STORAGE_KEY = 'nutritrack-user';\nconst FOODS_STORAGE_KEY = 'nutritrack-foods';\n\nexport default function CalorieTrackerApp() {\n  // States for user information with persistence\n  const [user, setUser] = useState<User>(() => {\n    const storedUser = localStorage.getItem(USER_STORAGE_KEY);\n    return storedUser ? JSON.parse(storedUser) : {\n      name: \"User\",\n      age: 30,\n      gender: \"female\",\n      weight: 70, // kg\n      height: 170, // cm\n      activityLevel: \"moderate\",\n      goal: \"maintain\",\n    };\n  });\n\n  // Current date for food tracking\n  const [currentDate, setCurrentDate] = useState(() => {\n    return new Date().toISOString().split('T')[0];\n  });\n\n  // States for food tracking with persistence\n  const [allFoods, setAllFoods] = useState<Food[]>(() => {\n    const storedFoods = localStorage.getItem(FOODS_STORAGE_KEY);\n    return storedFoods ? JSON.parse(storedFoods) : [];\n  });\n\n  // Filter foods for current date\n  const foods = allFoods.filter(food => food.date === currentDate);\n\n  const [newFood, setNewFood] = useState<Partial<Food>>({\n    name: \"\",\n    calories: 0,\n    protein: 0,\n    carbs: 0,\n    fat: 0,\n  });\n\n  const [activeTab, setActiveTab] = useState<\"home\" | \"add\" | \"metrics\" | \"settings\">(\"home\");\n\n  // Daily nutrition summary\n  const [dailySummary, setDailySummary] = useState({\n    calories: 0,\n    protein: 0,\n    carbs: 0,\n    fat: 0,\n  });\n\n  // Goal calculations\n  const [nutritionGoals, setNutritionGoals] = useState({\n    calories: 2000,\n    protein: 50,\n    carbs: 250,\n    fat: 55,\n  });\n\n  // Save user data when it changes\n  useEffect(() => {\n    localStorage.setItem(USER_STORAGE_KEY, JSON.stringify(user));\n  }, [user]);\n\n  // Save food data when it changes\n  useEffect(() => {\n    localStorage.setItem(FOODS_STORAGE_KEY, JSON.stringify(allFoods));\n  }, [allFoods]);\n\n  // Calculate BMR using Mifflin-St Jeor Equation\n  const calculateBMR = (): number => {\n    if (user.gender === \"female\") {\n      return Math.round(10 * user.weight + 6.25 * user.height - 5 * user.age - 161);\n    } else {\n      return Math.round(10 * user.weight + 6.25 * user.height - 5 * user.age + 5);\n    }\n  };\n\n  // Calculate TDEE (Total Daily Energy Expenditure)\n  const calculateTDEE = (): number => {\n    const bmr = calculateBMR();\n    const activityMultipliers: Record<User[\"activityLevel\"], number> = {\n      sedentary: 1.2,\n      light: 1.375,\n      moderate: 1.55,\n      active: 1.725,\n      veryActive: 1.9,\n    };\n    return Math.round(bmr * activityMultipliers[user.activityLevel]);\n  };\n\n  // Calculate goal-based calorie needs\n  const calculateCalorieGoal = (): number => {\n    const tdee = calculateTDEE();\n    const goalAdjustments: Record<User[\"goal\"], number> = {\n      lose: tdee - 500,\n      maintain: tdee,\n      gain: tdee + 500,\n    };\n    return goalAdjustments[user.goal];\n  };\n\n  // Update nutrition goals based on user data\n  useEffect(() => {\n    const calorieGoal = calculateCalorieGoal();\n\n    // Calculate macronutrient ratios (standard distribution)\n    const proteinPerKg = user.goal === \"gain\" ? 2.2 : user.goal === \"lose\" ? 2.0 : 1.6;\n    const proteinGoal = Math.round(user.weight * proteinPerKg);\n    const proteinCalories = proteinGoal * 4;\n\n    const fatRatio = 0.25; // 25% of calories from fat\n    const fatCalories = calorieGoal * fatRatio;\n    const fatGoal = Math.round(fatCalories / 9);\n\n    const remainingCalories = calorieGoal - proteinCalories - fatCalories;\n    const carbGoal = Math.round(remainingCalories / 4);\n\n    setNutritionGoals({\n      calories: calorieGoal,\n      protein: proteinGoal,\n      carbs: carbGoal,\n      fat: fatGoal,\n    });\n  }, [user]);\n\n  // Update daily summary whenever foods change\n  useEffect(() => {\n    const summary = foods.reduce(\n      (total, food) => ({\n        calories: total.calories + food.calories,\n        protein: total.protein + food.protein,\n        carbs: total.carbs + food.carbs,\n        fat: total.fat + food.fat,\n      }),\n      { calories: 0, protein: 0, carbs: 0, fat: 0 }\n    );\n\n    setDailySummary(summary);\n  }, [foods, currentDate]);\n\n  // Navigate dates\n  const changeDate = (offset: number) => {\n    const date = new Date(currentDate);\n    date.setDate(date.getDate() + offset);\n    setCurrentDate(date.toISOString().split('T')[0]);\n  };\n\n  // Format date for display\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    const today = new Date();\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    \n    if (dateString === today.toISOString().split('T')[0]) {\n      return 'Today';\n    } else if (dateString === yesterday.toISOString().split('T')[0]) {\n      return 'Yesterday';\n    } else {\n      return date.toLocaleDateString('en-US', { \n        weekday: 'short', \n        month: 'short', \n        day: 'numeric' \n      });\n    }\n  };\n\n  // Add a new food item\n  const handleAddFood = (): void => {\n    if (newFood.name && newFood.calories) {\n      const foodItem: Food = {\n        id: Date.now().toString(),\n        name: newFood.name,\n        calories: newFood.calories || 0,\n        protein: newFood.protein || 0,\n        carbs: newFood.carbs || 0,\n        fat: newFood.fat || 0,\n        date: currentDate,\n      };\n\n      const updatedFoods = [...allFoods, foodItem];\n      setAllFoods(updatedFoods);\n\n      // Reset form\n      setNewFood({ name: \"\", calories: 0, protein: 0, carbs: 0, fat: 0 });\n\n      // If on Add tab, switch to Home to show the added food\n      if (activeTab === \"add\") {\n        setActiveTab(\"home\");\n      }\n    }\n  };\n\n  // Remove a food item\n  const handleRemoveFood = (id: string): void => {\n    setAllFoods(allFoods.filter(food => food.id !== id));\n  };\n\n  // Update profile\n  const handleUpdateProfile = (field: keyof User, value: any): void => {\n    setUser({\n      ...user,\n      [field]: value,\n    });\n  };\n\n  // Calculate remaining calories\n  const remainingCalories = nutritionGoals.calories - dailySummary.calories;\n  const caloriePercentage = Math.min(100, (dailySummary.calories / nutritionGoals.calories) * 100);\n\n  // Calculate progress percentages for macros\n  const proteinPercentage = Math.min(100, (dailySummary.protein / nutritionGoals.protein) * 100);\n  const carbsPercentage = Math.min(100, (dailySummary.carbs / nutritionGoals.carbs) * 100);\n  const fatPercentage = Math.min(100, (dailySummary.fat / nutritionGoals.fat) * 100);\n\n  // Generate advice based on current intake and goals\n  const generateAdvice = (): string[] => {\n    const advice: string[] = [];\n\n    if (remainingCalories < -200) {\n      advice.push(\"You're over your calorie goal. Consider lighter meals for the rest of the day.\");\n    } else if (remainingCalories > nutritionGoals.calories * 0.5) {\n      advice.push(\"You're significantly under your calorie goal. Make sure you're eating enough.\");\n    }\n\n    if (dailySummary.protein < nutritionGoals.protein * 0.6 && dailySummary.calories > nutritionGoals.calories * 0.5) {\n      advice.push(\"Try to include more protein-rich foods in your next meals.\");\n    }\n\n    if (dailySummary.fat > nutritionGoals.fat) {\n      advice.push(\"You've reached your fat intake for today. Focus on lean proteins and complex carbs.\");\n    }\n\n    return advice.length > 0 ? advice : [\"You're on track with your nutrition goals today!\"];\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen bg-gray-50 max-w-md mx-auto\">\n      {/* Header */}\n      <header className=\"bg-black text-white p-4\">\n        <h1 className=\"text-xl font-bold\">NutriTrack</h1>\n        <p className=\"\">Hello, {user.name} </p>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"flex-1 overflow-y-auto p-4\">\n        {activeTab === \"home\" && (\n          <div>\n            {/* Date Navigation */}\n            <div className=\"flex justify-between items-center mb-4\">\n              <button \n                onClick={() => changeDate(-1)}\n                className=\"p-2 bg-gray-100 rounded\"\n              >\n                &lt;\n              </button>\n              <h2 className=\"font-semibold\">{formatDate(currentDate)}</h2>\n              <button \n                onClick={() => changeDate(1)}\n                className=\"p-2 bg-gray-100 rounded\"\n              >\n                &gt;\n              </button>\n            </div>\n\n            {/* Daily Summary */}\n            <div className=\"bg-white rounded-lg shadow p-4 mb-4\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <h2 className=\"font-bold\">Daily Summary</h2>\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"flex justify-between mb-1\">\n                  <span>Calories</span>\n                  <span>{dailySummary.calories} / {nutritionGoals.calories}</span>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                  <div\n                    className={`h-2 rounded-full ${remainingCalories < 0 ? 'bg-red-500' : 'bg-green-500'}`}\n                    style={{ width: `${caloriePercentage}%` }}\n                  ></div>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-3 gap-2 mb-4\">\n                <div className=\"bg-blue-50 p-2 rounded\">\n                  <div className=\"text-xs text-gray-500\">Protein</div>\n                  <div className=\"font-semibold\">{dailySummary.protein}g</div>\n                  <div className=\"text-xs text-gray-500\">of {nutritionGoals.protein}g</div>\n                </div>\n                <div className=\"bg-blue-50 p-2 rounded\">\n                  <div className=\"text-xs text-gray-500\">Carbs</div>\n                  <div className=\"font-semibold\">{dailySummary.carbs}g</div>\n                  <div className=\"text-xs text-gray-500\">of {nutritionGoals.carbs}g</div>\n                </div>\n                <div className=\"bg-blue-50 p-2 rounded\">\n                  <div className=\"text-xs text-gray-500\">Fat</div>\n                  <div className=\"font-semibold\">{dailySummary.fat}g</div>\n                  <div className=\"text-xs text-gray-500\">of {nutritionGoals.fat}g</div>\n                </div>\n              </div>\n\n              <div className=\"bg-yellow-50 p-3 rounded border border-yellow-100\">\n                <h3 className=\"font-semibold mb-1\">Today's Advice</h3>\n                <ul className=\"text-sm\">\n                  {generateAdvice().map((advice, index) => (\n                    <li key={index} className=\"mb-1\">{advice}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n\n            {/* Today's Food */}\n            <div className=\"bg-white rounded-lg shadow p-4 mb-4\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <h2 className=\"font-bold\">Food Log</h2>\n                <button\n                  onClick={() => setActiveTab(\"add\")}\n                  className=\"text-sm bg-black text-white px-3 py-1 rounded\"\n                >\n                  Add Food\n                </button>\n              </div>\n              \n              {foods.length === 0 ? (\n                <p className=\"text-gray-500 text-sm\">No foods logged for {formatDate(currentDate)}.</p>\n              ) : (\n                <ul className=\"divide-y\">\n                  {foods.map(food => (\n                    <li key={food.id} className=\"py-2\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"font-medium\">{food.name}</span>\n                        <div className=\"flex items-center\">\n                          <span className=\"font-semibold mr-2\">{food.calories} cal</span>\n                          <button \n                            onClick={() => handleRemoveFood(food.id)}\n                            className=\"text-red-500\"\n                            aria-label=\"Remove food\"\n                          >\n                            <X size={18} />\n                          </button>\n                        </div>\n                      </div>\n                      <div className=\"text-xs text-gray-500\">\n                        P: {food.protein}g • C: {food.carbs}g • F: {food.fat}g\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </div>\n        )}\n\n        {activeTab === \"add\" && (\n          <div className=\"bg-white rounded-lg shadow p-4\">\n            <h2 className=\"font-bold mb-4\">Add Food</h2>\n\n            <div className=\"space-y-3\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Food Name</label>\n                <input\n                  type=\"text\"\n                  className=\"w-full p-2 border rounded\"\n                  value={newFood.name}\n                  onChange={(e) => setNewFood({ ...newFood, name: e.target.value })}\n                  placeholder=\"e.g. Chicken Breast\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Calories</label>\n                <input\n                  type=\"number\"\n                  className=\"w-full p-2 border rounded\"\n                  value={newFood.calories}\n                  onChange={(e) => setNewFood({ ...newFood, calories: Number(e.target.value) })}\n                  placeholder=\"e.g. 165\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-3 gap-2\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Protein (g)</label>\n                  <input\n                    type=\"number\"\n                    className=\"w-full p-2 border rounded\"\n                    value={newFood.protein}\n                    onChange={(e) => setNewFood({ ...newFood, protein: Number(e.target.value) })}\n                    placeholder=\"0\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Carbs (g)</label>\n                  <input\n                    type=\"number\"\n                    className=\"w-full p-2 border rounded\"\n                    value={newFood.carbs}\n                    onChange={(e) => setNewFood({ ...newFood, carbs: Number(e.target.value) })}\n                    placeholder=\"0\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Fat (g)</label>\n                  <input\n                    type=\"number\"\n                    className=\"w-full p-2 border rounded\"\n                    value={newFood.fat}\n                    onChange={(e) => setNewFood({ ...newFood, fat: Number(e.target.value) })}\n                    placeholder=\"0\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex space-x-2 pt-2\">\n                <button\n                  className=\"flex-1 bg-gray-300 text-gray-800 py-2 rounded font-medium\"\n                  onClick={() => setActiveTab(\"home\")}\n                >\n                  Cancel\n                </button>\n                <button\n                  className=\"flex-1 bg-black text-white py-2 rounded font-medium\"\n                  onClick={handleAddFood}\n                >\n                  Add Food\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === \"metrics\" && (\n          <div className=\"bg-white rounded-lg shadow p-4\">\n            <h2 className=\"font-bold mb-4\">Nutrition Metrics</h2>\n            \n            <div className=\"mb-6\">\n              <h3 className=\"text-md font-semibold mb-3\">Daily Macronutrient Breakdown</h3>\n              <div className=\"space-y-4\">\n                <div>\n                  <div className=\"flex justify-between text-sm mb-1\">\n                    <span>Protein ({Math.round((dailySummary.protein * 4 / (nutritionGoals.calories || 1)) * 100)}%)</span>\n                    <span>{dailySummary.protein}g / {nutritionGoals.protein}g</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className=\"h-2 rounded-full bg-blue-500\"\n                      style={{ width: `${proteinPercentage}%` }}\n                    ></div>\n                  </div>\n                </div>\n                \n                <div>\n                  <div className=\"flex justify-between text-sm mb-1\">\n                    <span>Carbs ({Math.round((dailySummary.carbs * 4 / (nutritionGoals.calories || 1)) * 100)}%)</span>\n                    <span>{dailySummary.carbs}g / {nutritionGoals.carbs}g</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className=\"h-2 rounded-full bg-green-500\"\n                      style={{ width: `${carbsPercentage}%` }}\n                    ></div>\n                  </div>\n                </div>\n                \n                <div>\n                  <div className=\"flex justify-between text-sm mb-1\">\n                    <span>Fat ({Math.round((dailySummary.fat * 9 / (nutritionGoals.calories || 1)) * 100)}%)</span>\n                    <span>{dailySummary.fat}g / {nutritionGoals.fat}g</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className=\"h-2 rounded-full bg-yellow-500\"\n                      style={{ width: `${fatPercentage}%` }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"mt-6\">\n              <h3 className=\"text-md font-semibold mb-3\">Your Energy Needs</h3>\n              <div className=\"bg-gray-50 p-4 rounded-lg space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">BMR:</span>\n                  <span className=\"font-medium\">{calculateBMR()} calories</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">TDEE:</span>\n                  <span className=\"font-medium\">{calculateTDEE()} calories</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Daily Goal:</span>\n                  <span className=\"font-medium\">{nutritionGoals.calories} calories</span>\n                </div>\n              </div>\n              \n              <div className=\"mt-4 bg-blue-50 p-3 rounded text-sm\">\n                <p className=\"mb-2\">\n                  <span className=\"font-semibold\">BMR</span> is the calories your body needs at rest.\n                </p>\n                <p>\n                  <span className=\"font-semibold\">TDEE</span> includes your activity level for daily needs.\n                </p>\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <h3 className=\"text-md font-semibold mb-3\">Daily Progress</h3>\n              <div className=\"relative pt-1\">\n                <div className=\"flex mb-2 items-center justify-between\">\n                  <div>\n                    <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-black bg-blue-200\">\n                      Progress\n                    </span>\n                  </div>\n                  <div className=\"text-right\">\n                    <span className=\"text-xs font-semibold inline-block text-black\">\n                      {Math.round(caloriePercentage)}%\n                    </span>\n                  </div>\n                </div>\n                <div className=\"overflow-hidden h-6 mb-4 text-xs flex rounded bg-gray-200\">\n                  <div\n                    style={{ width: `${caloriePercentage}%` }}\n                    className={`shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center ${\n                      remainingCalories < 0 ? 'bg-red-500' : 'bg-blue-500'\n                    }`}\n                  >\n                    {dailySummary.calories} / {nutritionGoals.calories}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === \"settings\" && (\n          <div className=\"bg-white rounded-lg shadow p-4\">\n            <h2 className=\"font-bold mb-4\">Profile Settings</h2>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Name</label>\n                <input\n                  type=\"text\"\n                  className=\"w-full p-2 border rounded\"\n                  value={user.name}\n                  onChange={(e) => handleUpdateProfile('name', e.target.value)}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Age</label>\n                <input\n                  type=\"number\"\n                  className=\"w-full p-2 border rounded\"\n                  value={user.age}\n                  onChange={(e) => handleUpdateProfile('age', Number(e.target.value))}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Gender</label>\n                <select\n                  className=\"w-full p-2 border rounded\"\n                  value={user.gender}\n                  onChange={(e) => handleUpdateProfile('gender', e.target.value)}\n                >\n                  <option value=\"male\">Male</option>\n                  <option value=\"female\">Female</option>\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Weight (kg)</label>\n                <input\n                  type=\"number\"\n                  className=\"w-full p-2 border rounded\"\n                  value={user.weight}\n                  onChange={(e) => handleUpdateProfile('weight', Number(e.target.value))}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Height (cm)</label>\n                <input\n                  type=\"number\"\n                  className=\"w-full p-2 border rounded\"\n                  value={user.height}\n                  onChange={(e) => handleUpdateProfile('height', Number(e.target.value))}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Activity Level</label>\n                <select\n                  className=\"w-full p-2 border rounded\"\n                  value={user.activityLevel}\n                  onChange={(e) => handleUpdateProfile('activityLevel', e.target.value)}\n                >\n                  <option value=\"sedentary\">Sedentary (little or no exercise)</option>\n                  <option value=\"light\">Light (light exercise 1-3 days/week)</option>\n                  <option value=\"moderate\">Moderate (exercise 3-5 days/week)</option>\n                  <option value=\"active\">Active (hard exercise 6-7 days/week)</option>\n                  <option value=\"veryActive\">Very Active (very hard exercise & physical job)</option>\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Goal</label>\n                <select\n                  className=\"w-full p-2 border rounded\"\n                  value={user.goal}\n                  onChange={(e) => handleUpdateProfile('goal', e.target.value)}\n                >\n                  <option value=\"lose\">Lose weight</option>\n                  <option value=\"maintain\">Maintain weight</option>\n                  <option value=\"gain\">Gain weight</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        )}\n      </main>\n\n      {/* Bottom Navigation */}\n      <nav className=\"bg-white border-t flex justify-around py-2\">\n        <button\n          className={`flex flex-col items-center p-2 ${activeTab === \"home\" ? \"text-black\" : \"text-gray-500\"}`}\n          onClick={() => setActiveTab(\"home\")}\n        >\n          <Home size={20} />\n          <span className=\"text-xs mt-1\">Home</span>\n        </button>\n        <button\n          className={`flex flex-col items-center p-2 ${activeTab === \"add\" ? \"text-black\" : \"text-gray-500\"}`}\n          onClick={() => setActiveTab(\"add\")}\n        >\n          <PlusCircle size={20} />\n          <span className=\"text-xs mt-1\">Add</span>\n        </button>\n        <button\n          className={`flex flex-col items-center p-2 ${activeTab === \"metrics\" ? \"text-black\" : \"text-gray-500\"}`}\n          onClick={() => setActiveTab(\"metrics\")}\n        >\n          <Calculator size={20} />\n          <span className=\"text-xs mt-1\">Metrics</span>\n        </button>\n        <button\n          className={`flex flex-col items-center p-2 ${activeTab === \"settings\" ? \"text-black\" : \"text-gray-500\"}`}\n          onClick={() => setActiveTab(\"settings\")}\n        >\n          <Settings size={20} />\n          <span className=\"text-xs mt-1\">Settings</span>\n        </button>\n      </nav>\n    </div>\n  );\n}","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport CalorieTrackerApp from './calorie-counter-app';\r\n\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <CalorieTrackerApp />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}